// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnetAPI.Models;

namespace dotnetAPI.Migrations
{
    [DbContext(typeof(SitDbContext))]
    partial class SitDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("dotnetAPI.Repository.Api", b =>
                {
                    b.Property<int>("APIId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("APIName")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("CClink")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("CurlCmd")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<bool>("RunTests");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.HasKey("APIId");

                    b.HasAlternateKey("Url");

                    b.ToTable("API");
                });

            modelBuilder.Entity("dotnetAPI.Repository.Error", b =>
                {
                    b.Property<int>("ErrId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ErrMsg")
                        .IsRequired()
                        .HasMaxLength(1000);

                    b.Property<int>("TestId");

                    b.HasKey("ErrId");

                    b.HasIndex("TestId");

                    b.ToTable("Error");
                });

            modelBuilder.Entity("dotnetAPI.Repository.NinetyDayAverage", b =>
                {
                    b.Property<int>("AvgId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("APIId");

                    b.Property<double>("AvgRespTime");

                    b.HasKey("AvgId");

                    b.HasIndex("APIId");

                    b.ToTable("NinetyDayAverage");
                });

            modelBuilder.Entity("dotnetAPI.Repository.TestResults", b =>
                {
                    b.Property<int>("TestId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("APIId");

                    b.Property<DateTime>("DateTime");

                    b.Property<int>("FailCount");

                    b.Property<int>("PassCount");

                    b.Property<double>("RespTime");

                    b.Property<int>("StatusCode")
                        .HasMaxLength(3);

                    b.HasKey("TestId");

                    b.HasIndex("APIId");

                    b.ToTable("TestResults");
                });

            modelBuilder.Entity("dotnetAPI.Repository.Error", b =>
                {
                    b.HasOne("dotnetAPI.Repository.TestResults")
                        .WithMany("Error")
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("dotnetAPI.Repository.NinetyDayAverage", b =>
                {
                    b.HasOne("dotnetAPI.Repository.Api")
                        .WithMany("NinetyDayAverage")
                        .HasForeignKey("APIId");
                });

            modelBuilder.Entity("dotnetAPI.Repository.TestResults", b =>
                {
                    b.HasOne("dotnetAPI.Repository.Api")
                        .WithMany("TestResults")
                        .HasForeignKey("APIId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
